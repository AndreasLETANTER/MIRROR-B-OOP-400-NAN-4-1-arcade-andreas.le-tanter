name: chocolatine
env:
  MIRROR_URL: git@github.com:EpitechPromo2026/B-OOP-400-NAN-4-1-arcade-andreas.le-tanter.git
  EXECUTABLE: "arcade"
on:
  push:
  pull_request:
    types: [created]
    branches-ignore:
      - 'ga-ignore-*'

jobs:
  check_repository_cleanliness:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check unwanted files
        run: |
          echo "Checking for unwanted files..."

  check_program_compilation:
    runs-on: ubuntu-latest
    needs: [check_repository_cleanliness]
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name : Fetch repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create build directory
        run: |
          echo "Creating build directory..."
      - name: Build project
        run: |
          echo "Building project..."
      - name: Make executable
        run: |
          echo "Making executable..."

  run_units_tests:
    runs-on: ubuntu-latest
    needs: [check_program_compilation]
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name : Fetch repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create build directory
        run: |
          echo "Creating build directory..."
      - name: Build project
        run: |
          echo "Building project..."
      - run: |
          echo "Running units tests..."

  run_functionals_tests:
    runs-on: ubuntu-latest
    needs: [run_units_tests]
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name : Fetch repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create build directory
        run: |
          echo "Creating build directory..."
      - name: Build project
        run: |
          echo "Building project..."
      - run: |
          echo "Running functionals tests..."

  push_to_mirror:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [run_functionals_tests]
    steps:
      - name: Fetch repository
        uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - name: Push to mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.SSH_KEY }}
